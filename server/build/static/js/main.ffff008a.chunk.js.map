{"version":3,"sources":["api.js","screens/Login.js","screens/Menu.js","screens/Dashboard.js","screens/Account.js","screens/Users.js","screens/Thing.js","App.js","serviceWorker.js","index.js"],"names":["fetch","endpoint","a","async","data","method","headers","body","JSON","stringify","token","localStorage","getItem","res","json","admin","ad","Login","state","error","sizings","lg","size","offset","md","sm","xs","handleSubmit","e","preventDefault","api","username","password","setItem","info","props","history","push","setState","this","replace","className","onSubmit","type","name","placeholder","onChange","target","value","theme","onClick","Component","Menu","current","toggleOpen","linkClick","location","toggleNavbar","logout","removeItem","expand","href","open","navbar","active","outline","pill","icon","faSignOutAlt","withRouter","getIcon","faLightbulb","faQuestion","Thing","pressable","iconColor","cardClick","uid","btnClick","stopPropagation","handleButtonPress","buttonPressTimer","setTimeout","startedPressing","Date","now","handleButtonRelease","console","log","toggleBtn","clearTimeout","prop","mainProp","String","mainPropVal","newVal","thing","updateMainState","force","time","onLongPress","onPress","style","borderColor","undefined","cursor","color","onMouseDown","onMouseUp","onMouseLeave","Dashboard","things","listThings","map","key","Account","colSize","changePassword","setPassword","onKeyDown","user","forceUpdate","disabled","autoComplete","toggle","Users","adminModalOpen","deleteUser","window","confirm","result","users","filter","addUser","nameRef","pwdRef","usersReq","marginBottom","innerRef","ref","faTrash","Property","invalid","initInput","inputRef","setProp","val","accepts","isNaN","getEditComp","Fragment","parseInt","split","margin","connect","start","step","range","min","max","errorFatal","loading","editingName","addUserRef","match","params","alreadyAdded","removeUser","u","editName","saveName","onRenameKeyDown","faTimes","faPen","Object","keys","Load","redirectTo","to","App","exact","path","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ffff008a.chunk.js","sourcesContent":["\r\n/**\r\n * Interact with the REST API\r\n * \r\n * @param {String} endpoint The API endpoint to call (ex: auth/login)\r\n * @param {Object} data Data to submit besides the token\r\n * @return {Object} The data\r\n */\r\nasync function request(endpoint, data = {}) {\r\n    var res = await fetch(`/api/v1/${endpoint}`, {\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({token: localStorage.getItem(\"token\"), ...data})\r\n    })\r\n    return await res.json()\r\n}\r\n\r\nfunction admin() {\r\n    var ad = localStorage.getItem(\"admin\")\r\n    if (typeof ad == \"boolean\")\r\n        return ad\r\n    else\r\n        return localStorage.getItem(\"admin\") == \"true\"\r\n}\r\n\r\nexport default {\r\n    fetch: request,\r\n    admin\r\n}","import React, {Component} from 'react';\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport api from './../api'\r\nimport './Login.scss'\r\nimport { FormInput, Container, Row, Col } from 'shards-react';\r\n\r\nexport default class Login extends Component {\r\n    state = {\r\n        error: \"\"\r\n    }\r\n    sizings = {\r\n        lg: {size: 4, offset: 4},\r\n        md: {size: 6, offset: 3},\r\n        sm: {size: 8, offset: 2},\r\n        xs: {size: 10, offset: 1}\r\n    }\r\n    componentDidMount() {\r\n        var token = localStorage.getItem(\"token\")\r\n        if (token) {\r\n            this.props.history.replace(\"/dashboard\")\r\n        }\r\n    }\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        var res = await api.fetch(\"auth/login\", {username: this.state.username, password: this.state.password})\r\n        if (res.error === null) {\r\n            localStorage.setItem(\"token\", res.token)\r\n            var info = await api.fetch(\"auth\")\r\n            localStorage.setItem(\"username\", info.username)\r\n            localStorage.setItem(\"admin\", info.admin)\r\n            this.props.history.push(\"/dashboard\")\r\n        } else {\r\n            this.setState({error: res.error})\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"login\">\r\n                <h1>Strempfer IoT</h1>\r\n                <p>{this.state.error}</p>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col {...this.sizings}>\r\n                                <FormInput type=\"text\" name=\"username\" placeholder=\"Username\" onChange={(e)=>this.setState({username: e.target.value})} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col {...this.sizings}>\r\n                                <FormInput type=\"password\" name=\"password\" placeholder=\"Password\" onChange={(e)=>this.setState({password: e.target.value})} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col {...this.sizings}>\r\n                                <FormInput type=\"submit\" theme=\"default\" className=\"btn btn-outline-primary\" name=\"submit\" value=\"Login\" onClick={this.handleSubmit} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\n\r\nimport { withRouter } from 'react-router-dom'\r\nimport './Menu.scss'\r\n\r\nimport api from './../api'\r\n\r\nimport { Navbar, NavbarBrand, NavbarToggler, Collapse, Nav, NavItem, NavLink, Button } from \"shards-react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Menu extends Component {\r\n    state = {\r\n        current: \"main\",\r\n        toggleOpen: false,\r\n        admin: false\r\n    }\r\n    componentDidMount() {\r\n        var token = localStorage.getItem(\"token\")\r\n        if (!token) {\r\n            this.props.history.replace(\"/login\")\r\n        }\r\n        this.setState({admin: api.admin()})\r\n    }\r\n    linkClick = (location) => {\r\n        return (e) => {\r\n            this.props.history.push(location)\r\n            e.preventDefault()\r\n        }\r\n    }\r\n    toggleNavbar = () => {\r\n        this.setState({toggleOpen: !this.state.toggleOpen})\r\n    }\r\n    logout = () => {\r\n        localStorage.removeItem(\"token\")\r\n        this.props.history.push(\"/\")\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"menu\">\r\n                <Navbar type=\"light\" theme=\"halftransparent\" expand=\"md\">\r\n                    <NavbarBrand href=\"#\">Strempfer IoT</NavbarBrand>\r\n                    <NavbarToggler onClick={this.toggleNavbar} />\r\n\r\n                    <Collapse open={this.state.toggleOpen} navbar>\r\n                        <Nav navbar>\r\n                            <NavItem active={this.props.current === \"dashboard\"}>\r\n                                <NavLink \r\n                                    active={this.props.current === \"dashboard\"}\r\n                                    href=\"\" \r\n                                    onClick={this.linkClick(\"/dashboard\")}>\r\n                                    Dashboard\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem active={this.props.current === \"account\"}>\r\n                                <NavLink \r\n                                    active={this.props.current === \"account\"}\r\n                                    href=\"\" \r\n                                    onClick={this.linkClick(\"/account\")}>\r\n                                    Account\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            {this.state.admin?(<NavItem active={this.props.current === \"users\"}>\r\n                                <NavLink \r\n                                    active={this.props.current === \"users\"}\r\n                                    href=\"\" \r\n                                    onClick={this.linkClick(\"/users\")}>\r\n                                    Users\r\n                                </NavLink>\r\n                            </NavItem>):null}\r\n                        </Nav>\r\n\r\n                        <Nav navbar className=\"ml-auto\">\r\n                            <Button onClick={this.logout} outline pill>Logout <FontAwesomeIcon icon={faSignOutAlt} /></Button>\r\n                        </Nav>\r\n                    </Collapse>\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Menu)","import React, {Component} from 'react';\r\nimport './Dashboard.scss'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faQuestion, faLightbulb } from '@fortawesome/free-solid-svg-icons'\r\nimport LongPress from 'react-long'\r\nimport {\r\n    BrowserView,\r\n    MobileView,\r\n  } from \"react-device-detect\";\r\n\r\nimport Menu from './Menu'\r\nimport api from '../api';\r\n\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col\r\n  } from \"shards-react\";\r\n\r\nfunction getIcon(icon) {\r\n    switch (icon) {\r\n        case \"lamp\":\r\n            return faLightbulb\r\n        default:\r\n            return faQuestion\r\n    }\r\n}\r\n\r\nclass Thing extends Component {\r\n    state = {\r\n        pressable: false,\r\n        iconColor: \"#444\",\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.mainProp && this.props.props[this.props.mainProp] === \"boolean\") {\r\n            this.setState({pressable: true})\r\n            this.mainPropVal = this.props.data[this.props.mainProp] == \"true\"\r\n            this.updateMainState(true)\r\n        }\r\n    }\r\n    updateMainState(force = false) {\r\n        if (this.state.pressable || force) {\r\n            if (this.mainPropVal) {\r\n                this.setState({iconColor: \"#444\"})\r\n            } else {\r\n                this.setState({iconColor: \"#ddd\"})\r\n            }\r\n        }\r\n    }\r\n    cardClick = () => {\r\n        this.props.history.push(`/thing/${this.props.uid}`)\r\n    }\r\n    btnClick = (e) => {\r\n        if (!this.state.pressable)\r\n            return\r\n        e.stopPropagation()\r\n    }\r\n    handleButtonPress = (e) => {\r\n        e.stopPropagation()\r\n        this.buttonPressTimer = setTimeout(() => {\r\n            this.props.history.push(`/thing/${this.props.uid}`)\r\n        }, 1500);\r\n        this.startedPressing = Date.now()\r\n    }\r\n    handleButtonRelease = async () => {\r\n        if (Date.now() - this.startedPressing < 1500 && this.state.pressable) {\r\n            this.startedPressing = 0\r\n            console.log(\"BTN\")\r\n            this.toggleBtn()\r\n        }\r\n        clearTimeout(this.buttonPressTimer);\r\n    }\r\n    toggleBtn = async () => {\r\n        await api.fetch(`things/${this.props.uid}/setProp`, {prop: this.props.mainProp, value: String(!this.mainPropVal)})\r\n        var newVal = (await api.fetch(`things/${this.props.uid}`)).thing\r\n        console.log(newVal)\r\n        this.mainPropVal = newVal.data[newVal.mainProp] == \"true\"\r\n        this.updateMainState()\r\n    }\r\n    render() {\r\n        return (\r\n            <Col xs=\"6\" sm=\"6\" md=\"3\" lg=\"2\">\r\n                <MobileView>\r\n                    <LongPress\r\n                        time={500}\r\n                        onLongPress={() => this.cardClick()}\r\n                        onPress={() => {\r\n                            if (this.state.pressable)\r\n                                this.toggleBtn()\r\n                            else\r\n                                this.cardClick()\r\n                        }}\r\n                    >\r\n                        <div className=\"thing card\">\r\n                            <div \r\n                                className={`btn ${this.state.pressable?\"pressable\":\"\"}`} \r\n                                style={{\r\n                                    borderColor: this.state.pressable?this.state.iconColor:undefined,\r\n                                    cursor: this.state.pressable?\"pointer\":\"default\"\r\n                                }}\r\n                                >\r\n                                <FontAwesomeIcon color={this.state.iconColor} size=\"3x\" icon={getIcon(this.props.icon)} />\r\n                            </div>\r\n                            <span className=\"name\">{this.props.name}</span>\r\n                        </div>\r\n                    </LongPress>\r\n                </MobileView>\r\n                <BrowserView>\r\n                    <div className=\"thing card\" onClick={this.cardClick}>\r\n                        <div \r\n                            onClick={this.btnClick} \r\n                            onMouseDown={this.handleButtonPress} \r\n                            onMouseUp={this.handleButtonRelease} \r\n                            onMouseLeave={this.handleButtonRelease}\r\n                            className={`btn ${this.state.pressable?\"pressable\":\"\"}`} \r\n                            style={{\r\n                                borderColor: this.state.pressable?this.state.iconColor:undefined,\r\n                                cursor: this.state.pressable?\"pointer\":\"default\"\r\n                            }}\r\n                            >\r\n                            <FontAwesomeIcon color={this.state.iconColor} size=\"3x\" icon={getIcon(this.props.icon)} />\r\n                        </div>\r\n                        <span className=\"name\">{this.props.name}</span>\r\n                    </div>\r\n                </BrowserView>\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n\r\nexport default class Dashboard extends Component {\r\n    state = {\r\n        things: []\r\n    }\r\n    listThings = async () => {\r\n        var things = await api.fetch(\"things/list\")\r\n        this.setState({things: things.things})\r\n    }\r\n    componentDidMount() {\r\n        this.listThings()\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"dashboard\">\r\n                <Menu current=\"dashboard\" />\r\n                <h2>Dashboard</h2>\r\n                <span>Long press for more options</span>\r\n                <Container>\r\n                    <Row>\r\n                        {this.state.things.map((thing) => <Thing key={thing.uid} history={this.props.history}  {...thing} />)}\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport './Account.scss'\r\n\r\nimport Menu from './Menu'\r\nimport { FormInput, InputGroup, InputGroupAddon, InputGroupText, Button, Container, Col, Row, Modal, ModalHeader, ModalBody } from 'shards-react';\r\nimport api from '../api';\r\n\r\nexport default class Account extends Component {\r\n    colSize = {\r\n        lg: {size: 6, offset: 3},\r\n        md: {size: 8, offset: 2},\r\n        sm: {size: 10, offset: 1}\r\n    }\r\n    state = {\r\n        password: \"\",\r\n        error: null\r\n    }\r\n    async componentDidMount() {\r\n        var user = await api.fetch(\"auth\")\r\n        if (user.error) {\r\n            this.setState({error: user.error})\r\n            return\r\n        }\r\n        this.user = user.user\r\n        this.forceUpdate()\r\n    }\r\n    changePassword = (e) => {\r\n        this.setState({password: e.target.value})\r\n    }\r\n    setPassword = async (e) => {\r\n        console.log(\"SETTING\")\r\n        var res = await api.fetch(\"auth/changePassword\", {\r\n            password: this.state.password\r\n        })\r\n        if (res.error) {\r\n            this.setState({error: res.error})\r\n        } else {\r\n            this.setState({password: \"\"})\r\n        }\r\n    }\r\n    onKeyDown = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            this.setPassword()\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"account\">\r\n                <Menu current=\"account\" />\r\n                <h2>Account</h2>\r\n                <Container>\r\n                    <Row>\r\n                        <Col {...this.colSize}>\r\n                            <InputGroup className=\"mb-2\">\r\n                                <InputGroupAddon type=\"prepend\">\r\n                                    <InputGroupText>Username</InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <FormInput placeholder=\"Username\" disabled value={this.user?this.user.username:\"\"} />\r\n                            </InputGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col {...this.colSize}>\r\n                            <InputGroup className=\"mb-2\">\r\n                                <InputGroupAddon type=\"prepend\">\r\n                                    <InputGroupText>Password</InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <FormInput onChange={this.changePassword} onKeyDown={this.onKeyDown} value={this.state.password} type=\"password\" autoComplete=\"new-password\" placeholder=\"New Password\" />\r\n                                <InputGroupAddon type=\"append\">\r\n                                    <Button onClick={this.setPassword}>Save</Button>\r\n                                </InputGroupAddon>\r\n                            </InputGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                \r\n                <Modal open={this.state.error !== null} toggle={()=>this.setState({error: null})}>\r\n                    <ModalHeader>An Error Occurred</ModalHeader>\r\n                    <ModalBody>{this.state.error}</ModalBody>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Modal, ModalBody, ModalHeader, Container, FormInput, Row, Col, Button, InputGroupAddon, InputGroup, InputGroupText } from \"shards-react\";\r\nimport Menu from './Menu'\r\nimport api from '../api';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport './Users.scss'\r\n\r\nexport default class Users extends Component {\r\n    state = {\r\n        adminModalOpen: false,\r\n        error: null\r\n    }\r\n    async componentDidMount() {\r\n        if (!api.admin()) {\r\n            this.setState({adminModalOpen: true})\r\n        }\r\n        var usersReq = await api.fetch(\"auth/listUsers\")\r\n        this.users = usersReq.users\r\n\r\n        this.forceUpdate()\r\n    }\r\n    deleteUser = async (username) => {\r\n        if (window.confirm(\"Are you sure you want to delete \"+username+\"?\")) {\r\n            var result = await api.fetch(\"auth/deleteUser\", {username})\r\n            if (result.error) {\r\n                this.setState({error: result.error})\r\n                return\r\n            }\r\n            this.users = this.users.filter((user) => user.username !== username)\r\n            this.forceUpdate()\r\n        }\r\n    }\r\n    onKeyDown = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            this.addUser()\r\n        }\r\n    }\r\n    addUser = async () => {\r\n        if (this.nameRef.value && this.pwdRef.value) {\r\n            var res = await api.fetch(\"auth/addUser\", {\r\n                username: this.nameRef.value,\r\n                password: this.pwdRef.value\r\n            })\r\n            if (!res.error) {\r\n                this.users.push({username: this.nameRef.value})\r\n                this.nameRef.value = \"\"\r\n                this.pwdRef.value = \"\"\r\n                this.forceUpdate()\r\n            } else {\r\n                this.setState({error: res.error})\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"users\">\r\n                <Menu current=\"users\" />\r\n                <h2>Users</h2>\r\n\r\n                <Container>\r\n                    <Row>\r\n                        <Col lg={{size: 6, offset: 3}} md={{size: 8, offset: 2}} style={{marginBottom: 12}}>\r\n                            <form autoComplete=\"new-password\" onSubmit={this.addUser}>\r\n                            <InputGroup>\r\n                                <FormInput onKeyDown={this.onKeyDown} type=\"text\" placeholder=\"Username\" autoComplete=\"new-password\" innerRef={(ref) => {\r\n                                    if (ref) {\r\n                                        this.nameRef = ref\r\n                                    }\r\n                                }} />\r\n                                <FormInput onKeyDown={this.onKeyDown} type=\"password\" placeholder=\"Password\" autoComplete=\"new-password\" innerRef={(ref) => {\r\n                                    if (ref) {\r\n                                        this.pwdRef = ref\r\n                                    }\r\n                                }} />\r\n                                <InputGroupAddon type=\"append\">\r\n                                    <Button onClick={this.addUser}>Add</Button>\r\n                                </InputGroupAddon>\r\n                            </InputGroup>\r\n                            </form>\r\n                        </Col>\r\n                    </Row>\r\n                {this.users?this.users.map((user) => (\r\n                    <Row key={user.username}>\r\n                        <Col lg={{size: 6, offset: 3}} md={{size: 8, offset: 2}}>\r\n                            <InputGroup className=\"user\">\r\n                                <InputGroupText className={user.admin?\"adminuser\":\"regularuser\"}>{user.username}</InputGroupText>\r\n                                {user.admin?null:(\r\n                                <InputGroupAddon type=\"append\">\r\n                                    <Button theme=\"danger\" size=\"sm\" outline pill onClick={()=>this.deleteUser(user.username)}><FontAwesomeIcon icon={faTrash} /></Button>\r\n                                </InputGroupAddon>\r\n                                )}\r\n                            </InputGroup>\r\n                        </Col>\r\n                    </Row>\r\n                )):null}\r\n                </Container>\r\n\r\n                <Modal open={this.state.error !== null} toggle={()=>this.setState({error: null})}>\r\n                    <ModalHeader>An Error Occurred</ModalHeader>\r\n                    <ModalBody>{this.state.error}</ModalBody>\r\n                </Modal>\r\n                \r\n                <Modal open={this.state.adminModalOpen} toggle={()=>this.props.history.replace(\"/\")}>\r\n                    <ModalHeader>Permission Needed</ModalHeader>\r\n                    <ModalBody>To manage users, you need admin privileges</ModalBody>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Modal, ModalBody, ModalHeader, Container, Row, Col, Slider, FormInput, Button, InputGroup, InputGroupAddon } from \"shards-react\";\r\nimport Menu from './Menu'\r\nimport api from '../api';\r\nimport './Thing.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes, faPen } from '@fortawesome/free-solid-svg-icons';\r\nimport ReactLoading from 'react-loading';\r\n\r\nclass Property extends Component {\r\n    state = {\r\n        value: \"\",\r\n        invalid: false,\r\n    }\r\n    initInput = (ref) => {\r\n        if (ref) {\r\n            this.inputRef = ref\r\n            ref.value = this.props.value\r\n        }\r\n    }\r\n    setProp = (val) => {\r\n        if (this.props.accepts === \"number\") {\r\n            if (isNaN(val) || !val) {\r\n                this.setState({invalid: true})\r\n                return\r\n            }\r\n            else\r\n                this.setState({invalid: false})\r\n        }\r\n        api.fetch(`things/${this.props.thing}/setProp`, {\r\n            prop: this.props.name,\r\n            value: val\r\n        })\r\n    }\r\n    onKeyDown = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            this.setProp(this.inputRef.value)\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.setState({value: this.props.value})\r\n    }\r\n    getEditComp = () => {\r\n        switch (this.props.accepts) {\r\n            case \"number\":\r\n                return (\r\n                    <React.Fragment>\r\n                        <InputGroup size=\"sm\">\r\n                            <FormInput onKeyDown={this.onKeyDown} invalid={this.state.invalid} type=\"number\" placeholder=\"Value\" innerRef={(ref) => this.initInput(ref)} />\r\n                            <InputGroupAddon type=\"append\">\r\n                                <Button size=\"sm\" onClick={()=>this.setProp(this.inputRef.value)}>Set</Button>\r\n                            </InputGroupAddon>\r\n                        </InputGroup>\r\n                    </React.Fragment>\r\n                )\r\n            case \"\":\r\n            case \"string\":\r\n                return (\r\n                    <React.Fragment>\r\n                        <InputGroup size=\"sm\">\r\n                            <FormInput onKeyDown={this.onKeyDown} type=\"text\" placeholder=\"Value\" innerRef={(ref) => this.initInput(ref)} />\r\n                            <InputGroupAddon type=\"append\">\r\n                                <Button size=\"sm\" onClick={()=>this.setProp(this.inputRef.value)}>Set</Button>\r\n                            </InputGroupAddon>\r\n                        </InputGroup>\r\n                    </React.Fragment>\r\n                )\r\n            case \"boolean\":\r\n                return (\r\n                    <Button \r\n                        onClick={() => {\r\n                            this.setState({value: String(!(this.state.value == \"true\"))})\r\n                            this.setProp(String(!(this.state.value == \"true\")))\r\n                        }}\r\n                        className=\"bool\" \r\n                        size=\"sm\" \r\n                        theme={this.state.value==\"true\"?\"success\":\"danger\"}>\r\n                            {this.state.value}\r\n                    </Button>\r\n                )\r\n            default:\r\n                return (\r\n                    <div className=\"slider-inp\">\r\n                        <span className=\"slidermin\">{parseInt(this.props.accepts.split(\"-\")[0])}</span>\r\n                        <Slider\r\n                            theme=\"success\"\r\n                            margin={0}\r\n                            onChange={(val)=>this.setState({value: String(parseInt(val[0]))})}\r\n                            connect={[true, false]}\r\n                            start={[parseInt(this.state.value)]}\r\n                            step={1}\r\n                            range={{ min: parseInt(this.props.accepts.split(\"-\")[0]), max: parseInt(this.props.accepts.split(\"-\")[1]) }}\r\n                        />\r\n                        <span className=\"slidermax\">{parseInt(this.props.accepts.split(\"-\")[1])}</span>\r\n                        <Button size=\"sm\" onClick={()=>this.setProp(this.state.value)}>Set to {this.state.value}</Button>\r\n                    </div>\r\n                )\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"prop\">\r\n                <Row>\r\n                    <Col lg=\"2\" md=\"2\" xs=\"4\" sm=\"3\"><span className=\"propname\">{this.props.name}</span></Col>\r\n                    <Col>{this.getEditComp()}</Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default class Thing extends Component {\r\n    state = {\r\n        error: null,\r\n        errorFatal: false,\r\n        loading: true,\r\n        editingName: false,\r\n        name: \"...\"\r\n    }\r\n    async componentDidMount() {\r\n        var res = await api.fetch(`things/${this.props.match.params.uid}`)\r\n        if (res.error !== null) {\r\n            this.setState({error: \"An error occurred while loading the thing: \"+res.error, errorFatal: true})\r\n            return\r\n        }\r\n        this.thing = res.thing\r\n        this.setState({name: res.thing.name})\r\n\r\n        if (api.admin()) {\r\n            this.users = (await api.fetch(`things/${this.props.match.params.uid}/getUsers`)).users\r\n        }\r\n\r\n        this.setState({loading: false})\r\n        this.forceUpdate()\r\n    }\r\n    addUser = async () => {\r\n        var name = this.addUserRef.value\r\n        if (this.addUserRef.value == \"\") {\r\n            this.setState({error: \"Enter a username first\"})\r\n            return\r\n        }\r\n        var res = await api.fetch(`things/${this.props.match.params.uid}/addUser`, {username: this.addUserRef.value})\r\n        this.addUserRef.value = \"\"\r\n        if (res.error) {\r\n            this.setState({error: res.error})\r\n        } else {\r\n            if (!res.alreadyAdded) {\r\n                this.users.push({username: name})\r\n                this.forceUpdate()\r\n            }\r\n        }\r\n    }\r\n    removeUser = async (user) => {\r\n        var res = await api.fetch(`things/${this.props.match.params.uid}/removeUser`, {\r\n            username: user.username\r\n        })\r\n        this.users = this.users.filter((u) => u.username != user.username)\r\n        this.forceUpdate()\r\n    }\r\n    editName = async () => {\r\n        if (!this.state.editingName) {\r\n            this.setState({name: this.thing.name})\r\n        }\r\n        this.setState({editingName: !this.state.editingName})\r\n    }\r\n    saveName = async () => {\r\n        this.setState({editingName: false})\r\n        var res = await api.fetch(`things/${this.thing.uid}/rename`, {\r\n            name: this.state.name\r\n        })\r\n        if (res.error) {\r\n            this.setState({error: res.error})\r\n        } else {\r\n            this.thing.name = this.state.name;\r\n            this.forceUpdate()\r\n        }\r\n    }\r\n    onRenameKeyDown = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            this.saveName()\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.loading) {\r\n            return (\r\n                <div className=\"thing\">\r\n                    <Menu current=\"thing\" />\r\n                    <div className=\"loading\">\r\n                        <ReactLoading type={\"spin\"} color={\"black\"} />\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"thing\">\r\n                <Menu current=\"thing\" />\r\n                <h2>\r\n                    {this.state.editingName?(\r\n                            <InputGroup size=\"sm\" className=\"editName\">\r\n                              <FormInput onKeyDown={this.onRenameKeyDown} placeholder=\"Name\" onChange={(e)=>this.setState({name: e.target.value})} value={(this.state.name)} />\r\n                              <InputGroupAddon type=\"append\">\r\n                                <Button onClick={this.saveName} size=\"sm\">Save</Button>\r\n                              </InputGroupAddon>\r\n                            </InputGroup>\r\n                    ):(\r\n                    this.thing?this.thing.name:\"...\"\r\n                    )}\r\n                    <span>Thing</span>\r\n                    {api.admin()?<Button onClick={this.editName} theme={this.state.editingName?\"danger\":\"primary\"} className=\"editBTN\" outline pill><FontAwesomeIcon size=\"sm\" icon={this.state.editingName?faTimes:faPen} /></Button>:null}\r\n                </h2>\r\n                <Container><Row><Col lg={{size: 8, offset: 2}}>\r\n                    <Row>\r\n                        <Col>\r\n                            <h5>Properties</h5>\r\n                        </Col>\r\n                    </Row>\r\n                    {this.thing?(\r\n                        Object.keys(this.thing.props).map((prop) => <Property key={prop} thing={this.thing.uid} name={prop} value={this.thing.data[prop]} accepts={this.thing.props[prop]} />)\r\n                    ):null}\r\n                    {api.admin()?(\r\n                    <React.Fragment>\r\n                        <Row>\r\n                            <Col>\r\n                                <h5>Users</h5>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <div className=\"userlist\">\r\n                                    {this.users?(\r\n                                        this.users.map((user) => <div key={user.username} className=\"user\">{user.username}<FontAwesomeIcon onClick={()=>this.removeUser(user)} size=\"xs\" icon={faTimes} /></div>)\r\n                                    ):null}\r\n                                    <InputGroup size=\"sm\" className=\"addthinguser\">\r\n                                        <FormInput onKeyDown={(e) => {\r\n                                            if (e.key === \"Enter\") {\r\n                                                this.addUser()\r\n                                            }\r\n                                        }} type=\"text\" innerRef={(ref) => { if (ref) {this.addUserRef = ref}}} />\r\n                                        <InputGroupAddon type=\"append\">\r\n                                            <Button size=\"sm\" onClick={this.addUser}>Add</Button>\r\n                                        </InputGroupAddon>\r\n                                    </InputGroup>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </React.Fragment>\r\n                    ):null}\r\n                </Col></Row></Container>\r\n\r\n                <Modal open={this.state.error !== null} toggle={()=>{\r\n                        if (this.state.errorFatal)\r\n                            this.props.history.replace(\"/\")\r\n                        else\r\n                            this.setState({error: null, errorFatal: false})\r\n                    }}>\r\n                    <ModalHeader>An Error Occurred</ModalHeader>\r\n                    <ModalBody>{this.state.error}</ModalBody>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\nimport './App.scss';\nimport { Route, Link, BrowserRouter as Router, Redirect } from 'react-router-dom'\n\nimport Login from './screens/Login'\nimport Dashboard from './screens/Dashboard'\nimport Account from './screens/Account'\nimport Users from './screens/Users'\nimport Thing from './screens/Thing';\n\nclass Load extends Component {\n  state = {loading: true, redirectTo: \"\"}\n  componentDidMount() {\n    var token = localStorage.getItem(\"token\")\n    if (!token) {\n      this.setState({loading: false, redirectTo: \"/login\"})\n    } else {\n      this.setState({loading: false, redirectTo: \"/dashboard\"})\n    }\n  }\n  render() {\n    return (\n      <div>\n      {this.state.loading?(\n        <p>Loading...</p>\n      ):(<Redirect to={this.state.redirectTo} />)}\n      </div>\n    )\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <div>\n          <Route exact path=\"/\" component={Load} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route path=\"/account\" component={Account} />\n          <Route path=\"/users\" component={Users} />\n          <Route path=\"/thing/:uid\" component={Thing} />\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}